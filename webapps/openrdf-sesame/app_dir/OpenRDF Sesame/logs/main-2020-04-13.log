[WARN ] 2020-04-13 20:56:48,669 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:56:48,685 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:56:48,687 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:56:48,913 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:36,516 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:36,522 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:36,523 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:36,735 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:38,936 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:38,941 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:38,941 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:39,069 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:44,221 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:44,223 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:44,223 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:44,316 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:45,299 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:45,300 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:45,300 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:45,345 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:46,175 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:46,175 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:46,176 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:46,225 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:47,875 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:47,875 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:47,875 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:47,915 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:48,804 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:48,804 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:48,805 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:48,834 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:49,665 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:49,665 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:49,665 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:49,698 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:50,765 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:50,766 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:50,767 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:50,801 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:51,761 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:51,761 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:51,761 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:51,825 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:52,950 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:52,950 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:52,950 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:52,995 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 20:59:55,651 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 20:59:55,653 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 20:59:55,653 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 20:59:55,678 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:24,799 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:24,800 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:24,800 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:24,830 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:28,997 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:28,997 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:28,997 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:29,022 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:32,090 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:32,090 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:32,091 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:32,119 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:32,912 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:32,912 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:32,912 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:32,939 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:33,833 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:33,833 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:33,833 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:33,861 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:34,737 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:34,737 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:34,738 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:34,761 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:36,293 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:36,293 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:36,293 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:36,329 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:42,883 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:42,883 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:42,883 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:42,907 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:52,017 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:52,017 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:52,017 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:52,041 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:00:55,793 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:00:55,793 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:00:55,794 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:00:55,817 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:01:28,267 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:01:28,267 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:01:28,267 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:01:28,293 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:04:10,478 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:04:10,479 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:04:10,479 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:04:10,512 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:04:43,050 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:04:43,052 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:04:43,053 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:04:43,089 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:05:26,250 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:05:26,251 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:05:26,251 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:05:26,284 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:05:27,546 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:05:27,546 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:05:27,546 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:05:27,577 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:06:08,387 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:06:08,388 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:06:08,388 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:06:08,424 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:06:14,889 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:06:14,889 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:06:14,889 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:06:14,914 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:06:17,446 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:06:17,446 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:06:17,447 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:06:17,470 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:06:20,708 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:06:20,708 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:06:20,708 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:06:20,733 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:24:57,745 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:24:57,746 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:24:57,747 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:24:57,779 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:25:04,407 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:25:04,407 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:25:04,407 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:25:04,437 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:25:08,712 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:25:08,712 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:25:08,712 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:25:08,737 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:25:11,226 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:25:11,226 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:25:11,226 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:25:11,251 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:25:13,652 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:25:13,652 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:25:13,653 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:25:13,676 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:34:30,811 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:34:30,814 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:34:30,815 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:34:30,848 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:34:34,018 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:34:34,019 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:34:34,019 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:34:34,048 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:34:38,185 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:34:38,185 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:34:38,185 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:34:38,217 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:35:03,045 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:35:03,045 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:35:03,046 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:35:03,077 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:35:53,294 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:35:53,295 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:35:53,295 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:35:53,329 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:36:00,939 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:36:00,939 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:36:00,940 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:36:00,970 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:36:09,530 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:36:09,531 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:36:09,531 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:36:09,562 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:36:17,339 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:36:17,339 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:36:17,339 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:36:17,374 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:36:18,793 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:36:18,793 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:36:18,793 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:36:18,819 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:42:09,809 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:42:09,810 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:42:09,811 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:42:09,843 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:48:06,900 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:48:06,902 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:48:06,902 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:48:06,928 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:48:29,664 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:48:29,665 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:48:29,665 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:48:29,691 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:48:32,077 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:48:32,078 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:48:32,078 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:48:32,101 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:48:39,924 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:48:39,924 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:48:39,924 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:48:39,948 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-04-13 21:58:25,127 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$df7d649.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-04-13 21:58:25,129 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-04-13 21:58:25,130 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-04-13 21:58:25,167 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
