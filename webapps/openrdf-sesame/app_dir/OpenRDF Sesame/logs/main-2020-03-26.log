[INFO ] 2020-03-26 08:17:49,878 [main] Logback logging API implementation is configured.
[WARN ] 2020-03-26 08:17:50,002 [main] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/SYSTEM/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/SYSTEM/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.base.RepositoryWrapper.initialize(RepositoryWrapper.java:71)
	at org.openrdf.repository.event.base.NotifyingRepositoryWrapper.initialize(NotifyingRepositoryWrapper.java:142)
	at org.openrdf.repository.manager.SystemRepository.initialize(SystemRepository.java:81)
	at org.openrdf.repository.manager.LocalRepositoryManager.createSystemRepository(LocalRepositoryManager.java:107)
	at org.openrdf.repository.manager.LocalRepositoryManager.createSystemRepository(LocalRepositoryManager.java:62)
	at org.openrdf.repository.manager.RepositoryManager.initialize(RepositoryManager.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
	at javax.servlet.GenericServlet.init(GenericServlet.java:244)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:542)
	at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:351)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:800)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:288)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1322)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:731)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:490)
	at org.eclipse.jetty.ant.AntWebAppContext.doStart(AntWebAppContext.java:664)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:175)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.server.Server.start(Server.java:342)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
	at org.eclipse.jetty.server.Server.doStart(Server.java:290)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.ant.ServerProxyImpl.start(ServerProxyImpl.java:253)
	at org.eclipse.jetty.ant.JettyRunTask.execute(JettyRunTask.java:262)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:435)
	at org.apache.tools.ant.Target.performTasks(Target.java:456)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1393)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1364)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1248)
	at org.apache.tools.ant.Main.runBuild(Main.java:851)
	at org.apache.tools.ant.Main.startAnt(Main.java:235)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
[WARN ] 2020-03-26 08:17:50,002 [main] Removing invalid lock null
[WARN ] 2020-03-26 08:17:50,003 [main] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/SYSTEM
[INFO ] 2020-03-26 08:17:50,135 [main] FrameworkServlet 'openrdf-http-server': initialization completed in 5665 ms
[WARN ] 2020-03-26 08:18:34,900 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:34,905 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:34,906 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:34,968 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:34,995 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:34,996 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:34,996 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,033 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,041 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,041 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,042 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,072 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,082 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,082 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,082 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,114 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,121 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,121 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,121 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,153 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,164 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,164 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,164 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,193 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,202 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,202 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,202 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,227 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,235 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,235 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,235 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,259 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,266 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,266 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,266 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,290 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,323 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,323 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,323 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,347 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,353 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,353 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,353 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,377 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,387 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,387 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,388 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,413 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,419 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,419 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,419 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,443 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,452 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,453 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,453 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,478 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,484 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,484 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,485 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,510 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,522 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,523 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,523 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,551 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,559 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,559 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,560 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,587 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,594 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,594 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,595 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,619 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,628 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,628 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,628 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,655 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,663 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,663 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,664 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,695 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,702 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,702 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,702 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,727 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,737 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,737 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,738 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,763 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,769 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,769 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,769 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,795 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,804 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,804 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,804 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,830 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,835 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,835 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,836 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,860 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,867 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,867 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,868 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,893 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,900 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,900 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,901 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,926 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,934 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,934 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,934 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:35,961 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:35,969 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:35,969 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:35,969 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,026 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,035 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,035 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,035 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,059 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,067 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,067 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,068 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,092 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,109 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,109 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,109 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,136 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,143 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,143 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,143 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,175 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,183 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,183 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,183 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,215 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,223 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,223 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,223 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,251 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,259 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,259 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,259 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,291 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,297 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,297 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,297 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,320 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,328 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,328 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,328 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,354 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,361 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,361 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,362 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,390 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,398 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,398 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,399 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,422 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,430 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,430 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,430 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,457 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,465 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,466 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,466 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,490 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,496 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,496 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,496 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,520 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,531 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,531 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,532 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,559 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,567 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,567 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,567 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,590 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,598 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,598 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,598 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,621 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,627 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,627 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,628 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,655 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,661 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,661 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,661 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,684 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,689 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,689 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,689 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,712 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,721 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,721 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,721 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,770 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,776 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,776 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,776 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,798 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,809 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,809 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,809 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,833 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,840 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,840 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,840 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,864 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,872 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,873 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,873 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,898 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,904 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,904 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,904 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,927 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,937 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,938 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,938 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,961 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,967 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,967 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,967 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:36,990 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:36,999 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:36,999 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:36,999 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,023 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,030 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,030 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,030 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,052 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,060 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,061 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,061 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,084 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,099 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,099 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,099 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,122 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,129 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,129 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,129 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,152 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,158 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,158 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,158 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,181 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,191 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,191 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,191 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,221 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,227 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,227 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,228 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,250 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,257 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,258 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,258 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,280 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,286 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,286 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,286 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,314 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,321 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,322 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,322 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,348 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,355 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,355 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,355 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,384 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,391 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,391 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,392 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,441 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,446 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,446 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,446 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,469 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,475 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,475 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,475 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,499 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,511 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,511 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,512 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,535 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,542 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,543 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,543 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,565 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,570 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,571 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,571 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,596 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,602 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,602 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,602 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,626 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,635 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,635 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,635 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,664 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,671 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,672 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,672 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,697 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,703 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,704 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,704 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,731 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,737 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,737 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,737 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,765 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,770 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,770 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,771 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,795 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,803 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,804 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,804 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,828 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,833 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,833 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,833 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,862 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,868 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,868 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,868 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,892 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,899 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,899 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,899 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,924 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,931 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,932 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,932 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,954 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,960 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,961 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,961 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:37,983 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:37,992 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:37,992 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:37,993 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,015 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,022 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,022 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,022 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,044 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,050 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,051 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,051 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,098 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,103 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,103 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,103 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,126 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,133 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,134 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,134 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,157 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,163 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,163 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,163 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,185 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,194 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,194 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,194 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,218 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,225 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,225 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,225 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,251 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,261 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,261 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,261 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,285 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,293 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,293 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,293 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,321 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,329 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,329 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,329 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,357 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,367 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,367 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,367 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,397 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,420 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,420 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,420 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,445 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,451 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,451 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,452 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,474 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,481 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,481 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,481 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,504 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,510 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,510 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,510 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,533 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,543 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,543 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,543 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,571 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,578 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,578 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,579 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,612 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,621 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,621 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,621 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,650 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,658 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,658 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,658 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,681 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,691 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,691 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,691 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,716 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,722 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,722 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,722 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,745 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,754 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,754 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,754 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,800 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,806 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,806 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,806 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,831 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,839 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,839 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,840 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,864 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,869 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,869 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,869 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,891 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,899 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,900 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,900 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,924 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,930 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,930 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,930 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,953 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,960 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,960 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,960 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:38,983 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:38,989 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:38,989 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:38,989 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,013 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,019 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,019 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,020 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,043 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,049 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,049 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,049 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,072 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,079 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,079 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,079 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,105 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,111 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,111 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,112 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,134 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,144 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,144 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,144 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,168 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,174 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,174 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,174 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,196 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,204 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,204 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,204 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,227 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,234 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,234 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,234 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,259 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,266 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,266 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,266 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,289 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,295 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,296 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,296 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,319 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,326 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,326 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,327 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,350 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,355 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,355 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,356 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,380 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,389 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,389 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,390 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,436 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,442 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,442 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,442 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,464 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,471 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,471 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,471 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,495 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,500 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,500 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,500 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,522 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,529 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,529 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,529 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,552 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,558 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,558 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,558 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,581 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,591 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,591 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,591 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,624 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,633 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,633 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,634 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,665 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,672 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,672 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,672 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,703 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,710 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,710 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,710 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,739 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,749 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,750 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,750 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,779 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,785 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,785 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,788 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,813 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,820 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,820 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,820 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,843 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,848 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,848 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,848 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,871 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,877 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,877 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,877 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,900 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,905 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,905 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,905 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,928 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,934 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,934 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,934 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,959 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,964 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,965 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,965 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:39,987 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:39,994 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:39,994 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:39,994 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,016 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,021 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,021 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,021 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,046 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,051 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,051 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,052 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,097 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,102 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,103 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,103 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,126 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,132 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,132 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,133 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,155 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,161 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,162 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,162 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,184 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,191 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,191 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,192 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,215 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,220 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,220 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,220 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,243 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,249 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,249 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,249 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,272 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,278 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,278 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,278 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,301 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,308 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,308 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,308 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,331 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,336 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,336 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,336 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,361 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,370 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,370 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,370 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,395 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,400 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,401 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,401 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,425 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,433 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,433 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,433 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,456 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,462 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,462 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,463 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,485 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,495 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,495 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,495 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,520 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,527 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,527 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,527 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,553 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,562 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,562 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,562 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,585 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,591 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,591 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,591 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,618 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,626 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,626 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,626 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,651 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,658 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,658 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,658 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,682 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,690 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,690 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,690 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,747 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,754 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,754 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,755 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,783 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,791 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,791 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,791 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,817 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,822 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,822 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,822 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,846 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,854 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,854 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,854 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,877 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,882 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,882 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,882 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,905 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,914 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,914 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,914 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,937 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,943 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,943 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,943 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,965 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:40,972 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:40,973 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:40,973 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:40,996 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,001 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,001 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,001 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,024 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,033 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,033 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,033 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,057 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,063 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,063 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,063 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,085 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,094 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,094 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,094 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,117 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,122 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,123 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,123 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,145 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,154 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,154 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,155 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,178 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,184 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,184 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,184 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,206 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,214 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,214 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,214 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,237 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,242 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,242 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,243 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,265 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,273 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,273 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,274 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,298 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,303 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,303 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,303 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,326 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,335 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,335 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,335 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,359 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,394 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,394 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,394 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,419 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,428 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,428 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,428 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,450 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,456 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,456 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,456 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,478 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,487 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,487 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,487 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,511 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,516 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,516 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,516 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,538 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,546 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,546 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,547 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,569 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,576 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,576 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,576 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,599 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,605 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,605 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,605 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,628 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,633 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,633 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,633 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,656 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,665 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,665 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,665 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,688 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,694 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,694 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,694 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,716 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,724 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,724 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,724 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,748 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,753 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,753 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,753 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,776 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,785 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,785 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,785 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,810 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,815 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,815 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,815 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,837 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,846 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,846 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,846 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,869 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,875 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,875 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,875 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,898 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,906 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,906 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,906 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,930 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,935 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,935 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,935 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,958 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,966 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,966 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,967 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:41,990 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:41,996 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:41,996 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:41,996 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,050 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,058 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,058 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,058 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,081 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,086 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,086 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,086 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,110 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,117 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,117 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,118 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,141 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,147 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,147 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,147 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,170 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,177 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,177 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,177 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,202 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,207 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,207 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,208 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,232 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,241 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,241 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,241 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,270 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,277 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,277 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,277 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,308 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,316 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,316 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,316 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,345 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,351 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,351 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,351 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,379 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,387 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,387 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,388 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,412 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,418 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,418 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,418 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,444 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,451 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,451 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,451 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,475 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,482 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,482 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,482 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,509 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,517 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,517 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,517 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,540 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,546 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,546 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,546 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,569 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,577 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,577 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,577 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,600 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,605 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,605 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,605 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,628 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,635 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,635 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,636 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,659 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,664 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,664 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,664 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,709 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,717 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,717 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,717 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,739 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,745 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,745 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,745 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,768 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,776 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,776 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,776 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,799 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,804 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,804 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,805 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,827 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,835 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,835 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,835 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,859 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,864 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,864 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,864 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,886 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,894 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,894 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,894 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,917 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,925 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,925 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,925 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,947 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,956 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,957 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,957 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:42,981 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:42,986 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:42,986 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:42,987 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,011 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,019 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,019 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,020 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,043 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,049 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,049 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,049 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,071 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,079 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,080 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,080 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,103 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,108 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,108 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,108 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,131 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,139 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,139 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,139 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,162 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,167 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,168 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,168 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,190 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,198 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,198 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,198 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,220 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,226 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,226 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,226 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,248 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,257 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,257 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,257 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,279 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,285 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,285 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,285 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,330 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,338 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,338 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,338 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,362 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,368 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,368 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,368 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,390 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,399 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,399 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,399 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,422 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,428 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,428 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,429 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,451 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,461 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,461 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,462 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,485 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,491 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,491 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,492 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,514 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,522 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,522 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,522 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,545 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,550 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,550 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,550 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,574 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,583 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,583 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,583 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,605 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,611 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,611 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,611 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,634 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,642 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,642 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,642 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,665 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,670 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,670 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,670 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,693 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,700 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,701 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,701 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,724 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,729 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,729 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,729 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,751 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,759 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,759 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,759 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,782 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,787 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,787 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,788 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,810 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,818 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,818 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,818 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,841 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,847 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,847 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,847 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,869 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,877 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,877 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,877 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,900 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,906 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,906 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,906 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,929 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,961 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,961 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,961 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:43,984 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:43,989 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:43,989 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:43,989 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,011 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,019 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,019 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,020 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,043 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,048 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,048 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,048 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,071 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,079 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,079 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,079 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,102 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,107 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,107 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,107 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,129 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,138 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,138 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,138 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,161 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,166 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,166 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,167 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,189 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,198 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,198 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,198 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,221 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,227 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,227 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,227 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,250 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,258 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,258 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,258 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,281 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,286 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,286 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,286 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,309 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,317 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,317 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,317 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,340 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,346 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,346 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,346 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,369 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,377 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,377 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,377 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,400 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,405 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,406 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,406 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,428 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,435 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,435 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,435 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,460 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,465 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,465 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,465 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,488 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,496 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,496 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,496 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,519 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,524 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,524 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,524 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,547 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,554 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,555 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,555 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,600 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,606 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,606 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,606 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,628 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,638 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,638 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,638 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,661 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,667 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,667 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,668 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,690 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,698 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,698 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,698 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,720 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,726 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,726 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,726 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,748 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,757 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,757 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,757 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,780 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,785 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,785 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,786 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,808 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,817 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,817 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,818 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,841 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,847 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,847 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,847 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,870 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,878 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,878 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,878 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,901 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,906 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,906 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,906 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,930 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,938 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,938 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,938 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,962 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,967 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,967 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,967 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:44,990 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:44,998 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:44,998 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:44,999 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,023 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,028 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,028 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,028 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,052 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,060 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,060 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,060 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,083 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,089 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,089 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,089 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,112 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,119 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,119 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,119 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,143 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,148 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,148 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,148 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,171 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,177 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,177 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,177 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,199 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,228 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,228 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,229 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,251 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,257 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,257 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,257 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,282 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,288 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,288 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,288 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,311 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,316 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,316 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,317 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,339 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,346 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,346 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,347 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,370 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,376 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,376 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,376 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,400 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,405 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,405 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,405 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,428 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,434 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,434 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,435 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,457 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,463 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,463 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,463 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,485 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,491 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,492 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,492 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,514 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,519 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,519 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,519 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,542 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,547 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,547 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,547 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,570 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,574 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,574 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,575 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,597 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,602 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,602 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,602 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,625 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,630 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,630 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,630 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,653 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,658 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,658 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,658 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,681 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,685 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,685 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,686 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,708 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,715 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,715 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,715 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,737 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,743 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,743 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,743 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,766 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,773 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,773 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,773 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,796 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,801 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,801 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,801 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,846 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,852 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,852 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,852 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,876 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,881 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,881 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,881 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,904 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,911 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,911 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,911 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,934 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,940 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,940 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,940 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,963 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:45,969 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:45,969 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:45,969 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:45,991 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,000 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,000 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,000 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,023 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,030 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,030 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,030 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,053 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,059 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,059 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,059 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,081 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,089 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,089 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,089 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,112 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,117 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,117 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,117 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,140 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,147 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,147 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,147 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,170 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,176 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,176 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,176 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,198 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,205 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,205 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,205 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,228 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,233 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,233 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,233 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,258 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,265 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,265 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,265 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,287 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,293 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,293 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,293 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,316 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,323 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,323 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,323 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,347 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,352 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,352 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,353 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,375 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,382 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,382 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,382 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,405 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,411 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,411 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,411 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,434 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,441 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,441 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,441 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,487 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:18:46,492 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:18:46,493 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:18:46,493 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:18:46,515 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:02,980 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:02,980 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:02,980 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:03,014 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:03,019 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:03,019 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:03,019 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:03,042 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:39,461 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:39,462 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:39,462 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:39,489 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:39,496 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:39,497 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:39,497 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:39,523 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:43,958 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:43,959 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:43,959 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:43,984 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:43,988 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:43,988 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:43,988 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:44,011 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:47,769 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:47,769 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:47,770 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:47,793 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:19:47,801 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:19:47,801 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:19:47,801 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:19:47,829 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:20:03,855 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:20:03,855 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:20:03,855 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:20:03,883 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[INFO ] 2020-03-26 08:21:20,210 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:21:25,391 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:21:30,235 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:21:30,249 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:21:30,337 [repositories/SYSTEM] GET statements
[WARN ] 2020-03-26 08:21:37,236 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,236 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,236 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,261 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,268 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,268 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,268 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,298 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,305 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,305 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,305 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,337 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,343 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,343 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,343 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,368 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,374 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,374 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,374 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,396 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,400 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,401 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,401 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,424 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,429 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,429 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,430 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,452 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,456 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,456 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,456 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,478 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,484 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,484 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,484 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,507 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,512 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,512 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,512 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,535 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,542 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,542 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,542 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,566 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,570 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,570 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,570 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,594 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,599 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,599 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,599 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,623 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,628 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,628 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,629 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,653 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,659 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,659 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,660 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,684 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,689 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,690 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,690 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,714 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,720 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,720 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,721 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,747 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,752 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,752 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,753 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,777 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,783 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,783 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,783 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,808 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,813 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,813 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,813 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,837 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,842 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,842 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,842 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,864 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,868 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,869 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,869 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,891 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,896 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,896 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,896 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,919 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,923 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,923 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,923 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:37,973 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:37,978 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:37,978 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:37,978 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,001 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,005 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,005 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,005 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,030 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,035 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,035 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,035 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,057 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,061 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,061 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,061 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,084 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,089 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,089 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,089 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,112 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,116 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,116 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,116 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,138 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,144 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,144 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,144 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,166 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,171 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,171 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,171 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,193 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,199 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,199 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,200 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,222 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,227 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,227 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,227 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,253 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,260 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,260 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,261 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,289 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,295 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,295 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,295 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,324 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,331 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,331 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,332 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,359 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,364 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,364 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,364 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,394 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,400 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,400 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,400 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,428 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,432 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,433 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,433 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,456 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,461 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,461 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,461 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,486 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,490 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,490 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,490 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,514 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,520 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,520 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,520 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,544 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,548 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,548 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,548 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,575 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,579 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,579 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,580 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,629 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,634 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,634 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,634 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,657 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,662 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,662 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,662 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,685 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,689 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,690 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,690 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,714 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,720 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,720 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,720 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,742 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,746 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,746 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,746 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,773 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,780 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,780 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,780 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,807 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,812 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,812 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,812 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,843 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,849 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,849 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,849 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,875 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,879 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,879 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,879 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,902 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,907 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,907 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,908 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,931 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,935 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,935 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,935 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,959 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,964 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,964 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,964 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:38,990 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:38,994 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:38,994 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:38,995 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,017 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,023 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,023 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,023 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,047 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,050 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,050 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,050 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,073 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,077 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,077 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,077 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,100 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,104 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,104 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,104 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,126 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,131 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,131 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,131 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,154 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,157 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,157 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,157 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,179 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,184 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,185 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,185 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,207 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,211 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,211 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,211 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,257 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,262 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,262 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,262 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,291 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,295 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,295 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,295 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,318 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,323 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,323 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,323 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,346 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,349 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,349 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,350 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,372 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,377 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,377 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,377 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,400 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,404 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,404 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,404 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,427 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,431 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,431 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,432 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,454 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,458 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,458 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,458 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,481 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,485 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,485 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,486 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,508 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,512 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,512 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,513 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,535 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,540 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,540 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,540 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,563 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,567 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,567 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,567 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,591 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,597 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,597 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,597 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,623 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,627 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,627 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,627 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,655 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,660 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,660 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,660 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,683 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,687 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,687 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,687 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,710 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,715 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,715 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,715 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,738 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,742 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,742 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,743 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,765 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,771 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,771 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,771 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,794 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,797 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,797 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,798 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,821 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,850 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,850 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,850 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,872 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,876 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,876 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,876 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,899 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,904 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,904 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,904 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,927 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,931 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,931 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,931 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,954 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,959 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,959 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,959 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:39,981 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:39,986 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:39,986 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:39,986 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,009 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,015 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,015 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,015 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,040 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,044 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,044 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,044 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,066 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,072 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,072 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,072 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,097 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,101 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,101 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,101 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,124 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,129 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,129 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,129 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,152 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,156 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,156 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,156 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,179 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,184 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,184 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,184 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,207 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,210 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,211 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,211 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,233 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,239 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,239 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,239 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,262 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,266 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,266 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,266 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,289 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,294 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,294 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,294 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,316 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,321 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,321 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,321 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,344 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,348 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,349 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,349 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,371 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,375 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,375 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,375 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,397 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,402 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,402 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,402 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,447 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,451 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,451 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,451 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,474 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,479 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,479 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,479 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,501 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,506 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,506 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,506 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,529 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,534 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,534 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,534 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,558 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,562 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,562 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,562 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,592 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,597 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,597 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,598 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,622 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,626 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,626 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,626 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,649 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,655 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,655 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,655 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,678 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,682 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,682 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,682 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,706 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,711 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,711 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,711 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,735 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,739 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,739 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,739 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,762 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,768 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,768 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,768 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,791 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,795 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,796 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,796 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,819 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,825 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,825 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,826 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,849 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,853 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,853 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,854 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,876 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,881 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,881 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,881 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,904 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,908 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,908 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,908 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,930 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,935 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,935 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,935 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,957 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,961 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,961 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,961 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:40,984 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:40,989 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:40,989 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:40,989 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,011 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,015 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,015 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,015 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,061 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,065 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,065 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,066 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,088 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,092 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,092 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,092 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,114 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,120 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,120 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,120 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,142 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,146 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,146 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,147 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,169 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,173 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,174 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,174 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,196 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,200 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,200 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,200 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,223 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,228 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,228 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,228 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,251 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,255 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,255 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,255 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,278 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,283 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,283 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,283 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,306 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,309 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,310 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,310 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,332 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,338 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,338 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,338 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,361 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,364 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,364 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,365 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,387 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,392 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,392 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,392 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,414 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,418 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,419 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,419 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,441 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,446 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,447 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,447 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,469 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,473 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,473 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,474 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,496 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,502 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,502 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,502 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,525 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,529 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,529 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,530 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,552 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,557 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,557 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,557 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,580 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,585 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,585 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,585 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,607 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,612 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,613 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,613 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,658 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,662 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,662 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,663 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,686 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,691 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,691 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,691 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,713 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,718 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,719 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,719 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,740 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,746 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,746 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,746 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,768 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,772 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,772 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,772 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,795 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,800 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,800 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,800 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,822 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,826 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,826 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,826 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,848 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,854 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,854 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,854 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,876 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,880 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,880 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,880 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,903 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,907 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,907 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,907 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,930 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,935 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,935 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,935 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,960 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,964 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,965 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,965 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:41,987 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:41,991 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:41,992 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:41,992 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,015 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,020 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,020 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,020 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,045 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,050 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,050 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,050 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,074 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,078 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,078 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,079 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,104 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,109 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,109 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,109 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,136 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,142 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,142 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,143 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,167 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,172 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,172 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,172 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,196 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,202 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,202 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,202 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,227 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,230 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,230 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,231 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,284 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,291 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,291 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,291 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,315 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,320 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,320 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,320 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,345 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,350 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,350 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,350 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,375 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,379 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,379 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,379 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,404 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,410 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,410 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,410 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,435 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,440 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,440 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,440 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,464 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,470 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,470 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,470 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,495 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,498 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,498 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,499 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,524 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,529 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,529 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,529 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,554 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,559 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,559 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,559 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,583 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,589 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,589 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,589 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,613 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,617 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,617 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,617 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,642 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,647 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,647 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,647 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,673 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,677 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,677 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,677 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,701 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,707 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,708 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,708 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,732 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,737 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,737 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,737 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,771 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,784 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,784 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,785 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,814 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,819 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,819 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,820 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,846 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,851 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,851 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,851 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,874 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,878 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,878 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,878 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,900 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,905 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,905 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,905 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,950 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,954 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,954 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,954 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:42,977 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:42,981 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:42,982 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:42,982 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,009 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,013 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,013 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,014 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,037 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,042 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,042 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,042 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,065 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,068 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,068 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,068 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,092 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,097 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,097 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,097 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,120 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,124 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,124 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,124 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,148 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,154 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,154 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,155 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,180 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,184 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,184 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,184 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,213 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,218 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,219 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,219 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,244 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,248 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,248 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,248 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,276 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,282 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,282 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,282 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,325 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,329 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,330 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,330 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,358 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,363 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,364 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,364 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,387 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,390 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,390 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,390 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,412 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,417 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,417 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,417 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,440 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,444 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,444 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,444 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,466 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,470 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,470 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,471 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,493 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,496 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,496 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,496 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,519 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,523 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,523 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,523 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,546 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,549 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,550 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,550 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,572 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,577 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,601 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,602 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,624 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,630 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,630 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,631 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,653 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,658 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,658 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,658 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,680 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,685 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,685 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,685 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,707 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,711 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,711 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,712 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,733 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,738 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,738 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,738 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,760 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,765 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,765 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,765 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,788 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,792 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,792 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,792 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,814 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,820 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,820 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,820 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,843 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,847 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,847 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,847 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,870 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,877 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,877 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,877 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,904 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,910 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,910 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,910 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,932 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,939 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,939 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,939 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,968 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:43,973 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:43,973 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:43,973 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:43,996 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,002 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,002 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,003 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,032 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,037 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,037 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,037 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,059 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,064 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,064 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,064 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,087 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,090 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,090 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,091 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,113 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,118 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,118 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,118 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,140 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,143 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,143 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,143 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,165 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,170 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,170 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,170 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,193 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,196 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,196 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,197 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,242 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,247 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,247 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,247 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,270 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,273 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,273 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,273 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,296 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,302 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,302 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,302 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,332 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,337 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,337 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,338 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,367 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,373 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,373 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,373 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,402 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,407 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,407 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,407 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,434 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,440 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,440 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,441 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,472 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,477 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,477 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,477 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,511 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,517 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,518 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,518 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,549 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,554 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,554 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,554 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,586 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,597 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,597 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,597 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,624 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,629 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,629 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,629 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,653 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,658 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,658 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,658 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,683 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,686 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,686 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,686 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,708 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,713 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,714 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,714 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,736 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,739 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,739 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,739 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,762 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,766 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,766 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,766 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,789 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,792 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,793 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,793 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,815 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,820 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,820 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,820 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,843 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,846 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,846 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,847 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,870 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,875 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,875 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,875 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,921 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,925 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,925 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,926 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,948 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,953 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,953 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,953 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:44,975 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:44,979 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:44,979 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:44,979 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,002 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,007 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,007 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,008 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,032 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,036 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,036 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,036 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,063 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,068 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,068 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,068 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,091 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,095 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,095 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,095 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,117 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,122 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,122 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,122 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,145 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,149 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,149 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,149 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,171 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,175 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,175 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,176 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,197 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,201 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,201 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,201 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,223 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,227 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,227 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,227 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,249 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,253 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,253 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,253 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,276 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,280 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,280 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,280 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,304 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,307 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,307 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,308 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,331 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,336 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,336 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,336 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,358 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,362 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,362 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,362 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,385 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,390 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,390 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,390 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,412 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,417 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,417 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,417 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,440 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,445 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,445 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,446 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,468 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,472 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,472 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,473 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,495 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,526 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,526 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,526 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,548 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,553 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,553 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,553 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,576 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,581 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,581 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,581 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,604 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,608 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,608 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,608 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,630 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,635 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,635 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,635 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,657 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,662 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,662 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,662 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,685 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,690 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,690 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,690 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,713 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,716 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,717 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,717 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,739 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,744 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,744 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,744 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,766 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,771 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,771 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,771 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,794 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,798 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,798 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,799 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,821 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,825 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,825 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,825 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,847 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,852 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,852 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,852 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,874 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,878 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,878 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,879 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,901 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,906 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,906 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,906 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,929 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,933 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,933 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,933 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,955 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,960 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,960 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,960 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:45,984 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:45,988 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:45,988 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:45,988 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,011 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,015 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,015 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,015 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,038 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,042 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,042 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,042 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,065 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,069 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,069 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,069 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,092 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,095 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,096 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,096 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,142 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,147 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,148 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,148 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,171 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,175 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,175 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,175 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,198 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,203 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,203 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,203 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,226 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,230 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,230 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,230 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,253 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,258 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,258 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,258 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,281 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,284 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,284 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,284 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,307 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,311 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,311 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,312 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,333 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,337 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,338 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,338 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,360 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,365 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,365 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,365 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,387 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,391 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,391 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,391 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,414 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,420 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,420 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,420 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,444 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,448 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,448 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,448 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,476 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,480 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,480 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,480 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,508 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,512 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,512 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,512 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,536 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,541 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,541 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,541 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,564 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,568 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,568 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,568 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,591 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,597 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,597 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,597 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,621 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,624 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,624 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,625 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,648 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,652 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,652 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,653 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,676 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,680 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,680 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,680 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,702 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,707 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,707 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,707 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,754 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,757 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,757 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,758 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,780 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,784 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,784 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,785 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,806 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,810 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,810 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,810 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,833 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,838 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,838 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,838 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,861 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,865 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,865 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,865 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,888 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,893 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,893 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,893 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,917 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,922 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,922 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,922 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,947 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,951 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,951 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,952 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:46,978 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:46,981 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:46,981 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:46,982 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,007 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,012 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,012 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,012 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,038 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,043 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,043 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,043 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,068 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,075 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,075 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,076 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,100 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,105 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,105 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,105 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,130 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,135 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,135 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,135 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,159 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,163 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,163 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,163 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,186 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,190 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,190 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,191 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,214 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,218 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,218 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,218 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,241 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,247 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,247 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,247 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,272 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,276 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,276 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,276 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,302 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,310 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,310 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,310 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,338 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,343 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,343 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,343 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,372 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,378 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,378 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,378 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,433 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,439 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,439 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,439 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,466 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,473 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,474 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,474 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,500 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,507 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,507 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,507 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,533 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,539 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,539 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,539 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,562 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,565 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,565 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,565 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,588 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,592 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,592 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,593 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,616 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,619 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,620 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,620 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,643 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,647 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,647 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,647 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,671 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,675 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,675 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,675 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,698 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,704 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,704 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,705 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,728 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,732 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,732 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,732 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,756 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,760 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,760 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,760 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,785 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,789 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,789 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,789 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,845 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:21:47,865 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:21:47,865 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:21:47,865 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:21:47,894 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:22:14,357 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:22:14,357 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:22:14,357 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:22:14,386 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:22:27,831 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:22:27,832 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:22:27,832 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:22:27,858 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:22:39,436 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:22:39,436 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:22:39,436 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:22:39,460 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:22:53,522 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:22:53,522 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:22:53,522 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:22:53,548 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 08:27:25,457 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:27:25,457 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:27:25,458 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:27:25,485 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[INFO ] 2020-03-26 08:30:21,191 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:31:39,828 [qtp1538399081-165] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:31:46,206 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:31:51,130 [qtp1538399081-165] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:31:51,182 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:31:54,306 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:31:54,319 [repositories/SYSTEM] GET statements
[WARN ] 2020-03-26 08:31:54,325 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:531)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:761)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:31:54,325 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:31:54,326 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:31:54,352 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[INFO ] 2020-03-26 08:32:07,280 [qtp1538399081-156] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:32:07,330 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:32:09,503 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:32:09,568 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:05,325 [qtp1538399081-155] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:33:05,379 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:08,468 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:08,481 [repositories/SYSTEM] GET statements
[WARN ] 2020-03-26 08:33:08,486 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:531)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:761)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 08:33:08,486 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 08:33:08,487 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 08:33:08,516 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[INFO ] 2020-03-26 08:33:33,159 [qtp1538399081-173] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:33:33,201 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:35,329 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:33:35,392 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:36,064 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:33:36,111 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:36,902 [repositories/SYSTEM] GET statements
[INFO ] 2020-03-26 08:33:37,547 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:34:14,397 [repositories/kiln] Request for query 3392903 is finished
[INFO ] 2020-03-26 08:34:27,687 [qtp1538399081-173] Request for query 3392903 is finished
[WARN ] 2020-03-26 10:01:38,704 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:01:38,705 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:01:38,705 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:01:38,729 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:03:30,154 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:03:30,154 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:03:30,155 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:03:30,182 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:13:31,809 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:13:31,809 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:13:31,809 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:13:31,854 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:13:35,615 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:13:35,615 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:13:35,615 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:13:35,647 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:13:39,693 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:13:39,693 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:13:39,694 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:13:39,719 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:13:42,080 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:13:42,080 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:13:42,080 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:13:42,106 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:13:57,360 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:13:57,360 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:13:57,360 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:13:57,394 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:18:25,348 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:18:25,349 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:18:25,350 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:18:25,379 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:18:38,110 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:18:38,111 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:18:38,111 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:18:38,143 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:22:35,183 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:22:35,183 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:22:35,184 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:22:35,210 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:22:48,106 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:22:48,106 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:22:48,106 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:22:48,134 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[WARN ] 2020-03-26 10:22:51,461 [repositories/kiln] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.ForwardChainingRDFSInferencer.initialize(ForwardChainingRDFSInferencer.java:70)
	at org.openrdf.sail.helpers.SailWrapper.initialize(SailWrapper.java:92)
	at org.openrdf.sail.inferencer.fc.DirectTypeHierarchyInferencer.initialize(DirectTypeHierarchyInferencer.java:168)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.manager.LocalRepositoryManager.createRepository(LocalRepositoryManager.java:167)
	at org.openrdf.repository.manager.RepositoryManager.getRepository(RepositoryManager.java:376)
	at org.openrdf.http.server.repository.RepositoryInterceptor.setRequestAttributes(RepositoryInterceptor.java:117)
	at org.openrdf.http.server.ServerInterceptor.preHandle(ServerInterceptor.java:45)
	at org.openrdf.http.server.repository.RepositoryInterceptor.preHandle(RepositoryInterceptor.java:97)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$FastClassByCGLIB$$d92044ea.invoke(<generated>)
	at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:191)
	at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:700)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:149)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:635)
	at org.openrdf.http.server.repository.RepositoryInterceptor$$EnhancerByCGLIB$$5117730a.preHandle(<generated>)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:865)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:505)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1094)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1028)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:258)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:445)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:267)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:224)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)
	at java.lang.Thread.run(Thread.java:748)
[WARN ] 2020-03-26 10:22:51,462 [repositories/kiln] Removing invalid lock null
[WARN ] 2020-03-26 10:22:51,462 [repositories/kiln] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/kiln
[ERROR] 2020-03-26 10:22:51,486 [repositories/kiln] Error while handling request (500): org.openrdf.repository.RepositoryException: Unable to start transaction: data file is locked or read-only
[INFO ] 2020-03-26 10:24:20,676 [Thread-1] Closing org.springframework.web.context.support.XmlWebApplicationContext@46f970b6: display name [WebApplicationContext for namespace 'openrdf-http-server-servlet']; startup date [Thu Mar 26 08:17:44 EDT 2020]; root of context hierarchy
[INFO ] 2020-03-26 10:24:20,677 [Thread-1] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5834390e: defining beans [messageSource,adunaAppVersion,adunaAppConfig,adunaWebappNavigation,adunaWebappCommonValuesInserter,adunaWebappMessageInserter,adunaWebappNavigationInserter,filenameViewController,viewResolver,adunaWebappSystemUrlMapping,adunaWebappSystemOverviewController,adunaWebappLoggingOverviewController,adunaWebappSystemInfoController,openrdfRepositoryManager,scopedTarget.openrdfRepositoryInterceptor,openrdfRepositoryInterceptor,openrdfProtocolUrlMapping,openrdfRepositoryListUrlMapping,openrdfRepositoryUrlMapping,openrdfServerHomeUrlMapping,openrdfHandlerExceptionResolver,openrdfProtocolController,openrdfRepositoryListController,openrdfRepositoryController,openrdfRepositoryContextsController,openrdfRepositoryNamespacesController,openrdfRepositoryNamespaceController,openrdfRepositorySizeController,openrdfRepositoryStatementsController,openrdfRepositoryGraphController]; root of factory hierarchy
[INFO ] 2020-03-26 10:30:12,968 [main] Logback logging API implementation is configured.
[WARN ] 2020-03-26 10:30:13,143 [main] java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/SYSTEM/lock/process (No such file or directory)
java.io.FileNotFoundException: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/SYSTEM/lock/process (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileReader.<init>(FileReader.java:72)
	at org.openrdf.sail.helpers.DirectoryLockManager.getLockedBy(DirectoryLockManager.java:203)
	at org.openrdf.sail.helpers.DirectoryLockManager.removeInvalidLock(DirectoryLockManager.java:178)
	at org.openrdf.sail.helpers.DirectoryLockManager.tryLock(DirectoryLockManager.java:86)
	at org.openrdf.sail.memory.MemoryStore.initializeInternal(MemoryStore.java:283)
	at org.openrdf.sail.helpers.SailBase.initialize(SailBase.java:154)
	at org.openrdf.repository.sail.SailRepository.initializeInternal(SailRepository.java:97)
	at org.openrdf.repository.base.RepositoryBase.initialize(RepositoryBase.java:37)
	at org.openrdf.repository.base.RepositoryWrapper.initialize(RepositoryWrapper.java:71)
	at org.openrdf.repository.event.base.NotifyingRepositoryWrapper.initialize(NotifyingRepositoryWrapper.java:142)
	at org.openrdf.repository.manager.SystemRepository.initialize(SystemRepository.java:81)
	at org.openrdf.repository.manager.LocalRepositoryManager.createSystemRepository(LocalRepositoryManager.java:107)
	at org.openrdf.repository.manager.LocalRepositoryManager.createSystemRepository(LocalRepositoryManager.java:62)
	at org.openrdf.repository.manager.RepositoryManager.initialize(RepositoryManager.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)
	at javax.servlet.GenericServlet.init(GenericServlet.java:244)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:542)
	at org.eclipse.jetty.servlet.ServletHolder.initialize(ServletHolder.java:351)
	at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:800)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:288)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1322)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:731)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:490)
	at org.eclipse.jetty.ant.AntWebAppContext.doStart(AntWebAppContext.java:664)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:175)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108)
	at org.eclipse.jetty.server.Server.start(Server.java:342)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58)
	at org.eclipse.jetty.server.Server.doStart(Server.java:290)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69)
	at org.eclipse.jetty.ant.ServerProxyImpl.start(ServerProxyImpl.java:253)
	at org.eclipse.jetty.ant.JettyRunTask.execute(JettyRunTask.java:262)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:435)
	at org.apache.tools.ant.Target.performTasks(Target.java:456)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1393)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1364)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1248)
	at org.apache.tools.ant.Main.runBuild(Main.java:851)
	at org.apache.tools.ant.Main.startAnt(Main.java:235)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
[WARN ] 2020-03-26 10:30:13,144 [main] Removing invalid lock null
[WARN ] 2020-03-26 10:30:13,145 [main] Failed to lock directory: ./webapps/openrdf-sesame/app_dir/OpenRDF Sesame/repositories/SYSTEM
[INFO ] 2020-03-26 10:30:13,678 [main] FrameworkServlet 'openrdf-http-server': initialization completed in 6206 ms
